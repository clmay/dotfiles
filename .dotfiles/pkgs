#!/bin/bash

if [ -x "$(command -v brew)" ] && [ -x "$(command -v code)" ]; then
  if [ "$1" != "backup" ] && [ "$1" != "cleanup" ] && [ "$1" != "install" ] && [ "$1" != "sync" ] && [ "$1" != "upgrade" ]; then
    echo "Invalid argument. Please enter either 'backup', 'cleanup', 'install', or 'upgrade'."
    exit 1
  fi

  sync_type="$1"
  upgrade="$2"

  if [ "$sync_type" = "backup" ]; then
    echo "Updating Brewfile"
    brew bundle dump --force
    echo
    echo "Updating VS Code extension list"
    echo
    code --list-extensions > vscode/packages.txt

  elif [ "$sync_type" = "cleanup" ]; then
    echo "Cleaning up Homebrew packages"
    brew bundle cleanup --force
    echo

  elif [ "$sync_type" = "install" ]; then
    echo "Installing Homebrew packages"
    echo
    brew bundle
    rm -f Brewfile.lock.json
    echo
    echo "Installing VS Code extensions"
    echo
    while read pkg; do
      code --install-extension "$pkg"
    done < vscode/packages.txt
    echo

  elif [ "$sync_type" = "sync" ]; then
    ./pkgs install
    ./pkgs cleanup
    ./pkgs backup

  elif [ "$sync_type" = "upgrade" ]; then
    if [ "$upgrade" = "all" ]; then
      brew update && brew upgrade
      brew cask upgrade --greedy
    else
      brew update && brew upgrade
    fi
  fi
fi
